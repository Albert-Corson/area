openapi: 3.0.0

servers:
  - url: http://{ipAddr}:{port}
    description: New Server 1
    variables:
      ipAddr:
        default: localhost
        description: The IP address of the server hosting the API
      port:
        default: "8080"
        description: The port on which the API is listening

info:
  version: "1.0.0"
  title: Dashboard
  description: This is the documentation of the Dashboards' API

tags:
  - name: auth
    description: Authentication related requests
  - name: user
    description: User related requests
  - name: widget
    description: Widget related requests
  - name: service
    description: Service related requests

security:
  - bearer: []

components:
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
  parameters:
    userId:
      in: path
      name: userId
      description: The ID of a user
      required: true
      schema:
        type: integer
        minimum: 1
        maximum: 2147483647
    widgetId:
      in: path
      name: widgetId
      description: The ID of a widget
      required: true
      schema:
        type: integer
        minimum: 1
        maximum: 2147483647
    serviceId:
      in: path
      name: serviceId
      description: The ID of a service
      required: true
      schema:
        type: integer
        minimum: 1
        maximum: 2147483647
    serviceIdInQuery:
      in: query
      name: serviceId
      description: The service ID to get the widgets from. If unspecified, get all widgets
      required: false
      schema:
        type: integer
        minimum: 1
        maximum: 2147483647

  responses:
    UserTokensResponse:
      description: The users' access and refresh token
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: "#/components/schemas/UserTokens"
            allOf:
              - $ref: "#/components/schemas/Status"
    UserInformationResponse:
      description: Users' information
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: "#/components/schemas/User"
            allOf:
              - $ref: "#/components/schemas/Status"
    WidgetListResponse:
      description: A list of widgets
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                items:
                  allOf:
                    - $ref: "#/components/schemas/Widget"
            allOf:
              - $ref: "#/components/schemas/Status"
    ServiceListResponse:
      description: A list of services
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                items:
                  allOf:
                    - $ref: "#/components/schemas/Service"
            allOf:
              - $ref: "#/components/schemas/Status"
    EmptyConfirmationResponse:
      description: A response without data use to confirm a request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Status"
  schemas:
    Status:
      additionalProperties: false
      type: object
      required:
        - successful
      properties:
        error:
          type: string
        successful:
          type: boolean
    Credentials:
      additionalProperties: false
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
        password:
          type: string
    UserTokens:
      additionalProperties: false
      type: object
      required:
        - refresh_token
        - access_token
        - expires_in
      properties:
        refresh_token:
          type: string
        access_token:
          type: string
        expires_in:
          type: integer
          format: int64
    User:
      additionalProperties: false
      type: object
      required:
        - id
        - username
      properties:
        id:
          type: integer
          minimum: 1
          maximum: 2147483647
        username:
          type: string
        email:
          type: string
    Service:
      additionalProperties: false
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          minimum: 1
          maximum: 2147483647
        name:
          type: string
    WidgetParamList:
      additionalProperties: false
      description: Indicates the list of parameters used by this Widget
      items:
        type: object
        required:
          - name
          - type
          - required
        properties:
          name:
            type: string
            description: Indicates the identifier of this parameter
          type:
            type: string
            description: "Indicates the type of this parameter. Supported types are: integer, string"
          required:
            type: boolean
            description: "Indicates wether or not this parameter requires a query defined value when calling its widget"
          value:
            type: string
            description: The current value of this parameter
    WidgetCallResponseItem:
      additionalProperties: false
      description: The most basic item that you can receive when invoking a widget. More fields may be present depending on the widget.
      type: object
      properties:
        header:
          type: string
          description: A title/header
        content:
          type: string
          description: The content/description
        image:
          type: string
          description: A link to an image
        link:
          type: string
          description: A clickable link
    Widget:
      additionalProperties: false
      type: object
      required:
        - id
        - name
        - requires_auth
        - service
        - params
      properties:
        id:
          type: integer
          description: The unique ID of the widget
          minimum: 1
          maximum: 2147483647
        name:
          type: string
          description: The name of the widget
        requires_auth:
          type: boolean
          description: Indicates whether or not this widget needs authentication to be used or not
        service:
          $ref: "#/components/schemas/Service"
        params:
          $ref: '#/components/schemas/WidgetParamList'
    About.json:
      type: object
      required:
        - client
        - server
      properties:
        client:
          type: object
          required:
            - host
          properties:
            host:
              type: string
              description: Indicates the IP address of the client performing the HTTP request
        server:
          type: object
          required:
            - current_time
            - services
          properties:
            current_time:
              type: integer
              description: Indicates the server time in the Epoch Unix Time Stamp format
            services:
              description: Indicates the list of Services supported by the server
              items:
                type: object
                required:
                  - name
                  - widgets
                properties:
                  name:
                    type: string
                    description: Indicates the name of the Service
                  widgets:
                    description: Indicates the list of Widgets supported by this Service
                    items:
                      type: object
                      required:
                        - name
                        - params
                      properties:
                        name:
                          type: string
                          description: Indicates the identifier of this Widget
                        params:
                          additionalProperties: false
                          description: Indicates the list of parameters to configure this Widget
                          items:
                            type: object
                            properties:
                              name:
                                type: string
                                description: Indicates the identifier of this parameter
                              type:
                                type: string
                                description: "Indicates the type of this parameter. Supported types are: integer, string"

paths:
  /about.json:
    get:
      operationId: About.json
      summary: Describes the APIs' available content
      security: []
      responses:
        default:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/About.json'
  /auth/token:
    post:
      operationId: SignIn
      summary: Ask for for a users' access token and refresh token
      tags:
        - auth
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Credentials"
      responses:
        default:
          $ref: "#/components/responses/UserTokensResponse"
  /auth/refresh:
    post:
      operationId: RefreshAccessToken
      summary: Ask for new refresh and access tokens
      tags:
        - auth
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - refresh_token
              properties:
                refresh_token:
                  type: string
      responses:
        default:
          $ref: "#/components/responses/UserTokensResponse"
  /auth/revoke:
    delete:
      operationId: RevokeUserTokens
      summary: Revoke a users' access and refresh tokens
      tags:
        - auth
      responses:
        default:
          $ref: "#/components/responses/EmptyConfirmationResponse"
  /users:
    post:
      operationId: SignUp
      summary: Create an account
      tags:
        - user
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
              properties:
                email:
                  type: string
              allOf:
                - $ref: "#/components/schemas/Credentials"
      responses:
        default:
          $ref: "#/components/responses/EmptyConfirmationResponse"
  /users/me:
    get:
      operationId: GetMyUser
      summary: Get the current users' information
      tags:
        - user
      responses:
        default:
          $ref: '#/components/responses/UserInformationResponse'
  /users/{userId}:
    parameters:
      - $ref: "#/components/parameters/userId"
    get:
      operationId: GetUser
      summary: Get a users' information by his ID
      tags:
        - user
      responses:
        default:
          $ref: '#/components/responses/UserInformationResponse'
    delete:
      operationId: DeleteUser
      summary: Delete a users' account
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/userId"
      responses:
        default:
          $ref: "#/components/responses/EmptyConfirmationResponse"
  /widgets:
    get:
      operationId: GetWidgets
      summary: Get a list of widgets. The param values are the default ones used by this API.
      tags:
        - widget
      parameters:
        - $ref: '#/components/parameters/serviceIdInQuery'
      responses:
        default:
          $ref: '#/components/responses/WidgetListResponse'
  /widgets/me:
    get:
      operationId: GetMyWidgets
      summary: Get the widgets that the current user is subscribed to. The param values are the ones defined by the user (if any), otherwise the defaults
      tags:
        - widget
      parameters:
        - $ref: '#/components/parameters/serviceIdInQuery'
      responses:
        default:
          $ref: '#/components/responses/WidgetListResponse'
  /widgets/{widgetId}:
    parameters:
      - $ref: "#/components/parameters/widgetId"
    get:
      operationId: CallWidget
      summary: Fetch data from a widget according to the query parameters and user specific default input values
      tags:
        - widget
      parameters:
        - in: query
          name: input
          description: Multiple key=value query parameters to override default inputs
          schema:
            items:
              type: string
      responses:
        default:
          description: ""
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    required:
                      - params
                    properties:
                      params:
                        description: An array of the parameters that were used to call the widget's API
                        items:
                          $ref: "#/components/schemas/Widget"
                      item:
                        $ref:  "#/components/schemas/WidgetCallResponseItem"
                      items:
                        items:
                          $ref:  "#/components/schemas/WidgetCallResponseItem"
                allOf:
                  - $ref: "#/components/schemas/Status"
    post:
      operationId: SubscribeWidget
      summary: Subscribe the user to a widget
      tags:
        - widget
      requestBody:
        content:
          application/json:
            schema:
              description: An object of key/value of default input depending on the widget fetched
              type: object
      responses:
        default:
          $ref: "#/components/responses/EmptyConfirmationResponse"
    delete:
      operationId: UnsubscribeWidget
      summary: Unsubscribe the user from a widget
      tags:
        - widget
      responses:
        default:
          $ref: "#/components/responses/EmptyConfirmationResponse"
  /services:
    get:
      operationId: GetServices
      summary: List all existing services
      tags:
        - service
      responses:
        default:
          $ref: '#/components/responses/ServiceListResponse'
  /services/me:
    get:
      operationId: GetMyServices
      summary: List services  where the user has widgets
      tags:
        - service
      responses:
        default:
          $ref: '#/components/responses/ServiceListResponse'
  /services/{serviceId}:
    parameters:
      - $ref: "#/components/parameters/serviceId"
    get:
      operationId: GetService
      summary: Get a service by its ID
      tags:
        - service
      responses:
        default:
          description: ""
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/Service"
                allOf:
                  - $ref: "#/components/schemas/Status"
    post:
      operationId: SignInService
      summary: Login to a service
      tags:
        - service
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Credential information depending on the service
      responses:
        default:
          $ref: "#/components/responses/EmptyConfirmationResponse"
    delete:
      operationId: SignOutService
      summary: Logout from a service
      tags:
        - service
      responses:
        default:
          $ref: "#/components/responses/EmptyConfirmationResponse"
