create table "__EFMigrationsHistory"
(
    "MigrationId" varchar(150) not null
        constraint "PK___EFMigrationsHistory"
            primary key,
    "ProductVersion" varchar(32) not null
);

alter table "__EFMigrationsHistory" owner to postgres;

create table "Services"
(
    "Id" integer generated by default as identity
        constraint "PK_Services"
            primary key,
    "Name" text default ''::text not null
);

alter table "Services" owner to postgres;

create table "Users"
(
    "Id" integer generated by default as identity
        constraint "PK_Users"
            primary key,
    "Username" text default ''::text not null,
    "Email" text default ''::text not null,
    "Password" text default ''::text not null
);

alter table "Users" owner to postgres;

create table "Widgets"
(
    "Id" integer generated by default as identity
        constraint "PK_Widgets"
            primary key,
    "Name" text default ''::text not null,
    "Description" text default ''::text not null,
    "RequiresAuth" boolean default false not null,
    "ServiceId" integer default 0 not null
        constraint "FK_Widgets_Services_ServiceId"
            references "Services"
                on delete cascade
);

alter table "Widgets" owner to postgres;

create index "IX_Widgets_ServiceId"
    on "Widgets" ("ServiceId");

create table "UserHasServiceTokens"
(
    "UserModelId" integer not null
        constraint "FK_UserHasServiceTokens_Users_UserModelId"
            references "Users"
                on delete cascade,
    "Id" integer generated by default as identity,
    "Json" text default ''::text not null,
    "ServiceId" integer default 0 not null
        constraint "FK_UserHasServiceTokens_Services_ServiceId"
            references "Services"
                on delete cascade,
    constraint "PK_UserHasServiceTokens"
        primary key ("UserModelId", "Id")
);

alter table "UserHasServiceTokens" owner to postgres;

create index "IX_UserHasServiceTokens_ServiceId"
    on "UserHasServiceTokens" ("ServiceId");

create table "UsersToWidgets"
(
    "UserId" integer not null
        constraint "FK_UsersToWidgets_Users_UserId"
            references "Users"
                on delete cascade,
    "WidgetId" integer not null
        constraint "FK_UsersToWidgets_Widgets_WidgetId"
            references "Widgets"
                on delete cascade,
    constraint "PK_UsersToWidgets"
        primary key ("UserId", "WidgetId")
);

alter table "UsersToWidgets" owner to postgres;

create index "IX_UsersToWidgets_WidgetId"
    on "UsersToWidgets" ("WidgetId");

create table "Params"
(
    "Id" integer generated by default as identity
        constraint "PK_Params"
            primary key,
    "Name" text not null,
    "Type" integer not null,
    "Value" text,
    "Required" boolean not null,
    "WidgetId" integer not null
        constraint "FK_Params_Widgets_WidgetId"
            references "Widgets"
                on delete cascade
);

alter table "Params" owner to postgres;

create index "IX_Params_WidgetId"
    on "Params" ("WidgetId");

create table "UserHasParams"
(
    "UserModelId" integer not null
        constraint "FK_UserHasParams_Users_UserModelId"
            references "Users"
                on delete cascade,
    "Id" integer generated by default as identity,
    "ParamId" integer not null
        constraint "FK_UserHasParams_Params_ParamId"
            references "Params"
                on delete cascade,
    "Value" text not null,
    constraint "PK_UserHasParams"
        primary key ("UserModelId", "Id")
);

alter table "UserHasParams" owner to postgres;

create index "IX_UserHasParams_ParamId"
    on "UserHasParams" ("ParamId");

