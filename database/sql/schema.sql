create table "__EFMigrationsHistory"
(
    "MigrationId"    varchar(150) not null
        constraint "PK___EFMigrationsHistory"
            primary key,
    "ProductVersion" varchar(32)  not null
);

alter table "__EFMigrationsHistory"
    owner to postgres;

create table "Services"
(
    "Id"   integer generated by default as identity
        constraint "PK_Services"
            primary key,
    "Name" text
);

alter table "Services"
    owner to postgres;

create table "Users"
(
    "Id"       integer generated by default as identity
        constraint "PK_Users"
            primary key,
    "Username" text,
    "Email"    text,
    "Password" text
);

alter table "Users"
    owner to postgres;

create table "Widgets"
(
    "Id"           integer generated by default as identity
        constraint "PK_Widgets"
            primary key,
    "Name"         text,
    "Description"  text,
    "RequiresAuth" boolean,
    "ServiceId"    integer
        constraint "FK_Widgets_Services_ServiceId"
            references "Services"
            on delete restrict
);

alter table "Widgets"
    owner to postgres;

create index "IX_Widgets_ServiceId"
    on "Widgets" ("ServiceId");

create table "UserHasServiceTokens"
(
    "UserModelId" integer not null
        constraint "FK_UserHasServiceTokens_Users_UserModelId"
            references "Users"
            on delete cascade,
    "Id"          integer generated by default as identity,
    "Json"        text,
    "ServiceId"   integer
        constraint "FK_UserHasServiceTokens_Services_ServiceId"
            references "Services"
            on delete restrict,
    constraint "PK_UserHasServiceTokens"
        primary key ("UserModelId", "Id")
);

alter table "UserHasServiceTokens"
    owner to postgres;

create index "IX_UserHasServiceTokens_ServiceId"
    on "UserHasServiceTokens" ("ServiceId");

create table "UserHasWidgetParams"
(
    "UserModelId" integer not null
        constraint "FK_UserHasWidgetParams_Users_UserModelId"
            references "Users"
            on delete cascade,
    "Id"          integer generated by default as identity,
    "WidgetId"    integer
        constraint "FK_UserHasWidgetParams_Widgets_WidgetId"
            references "Widgets"
            on delete restrict,
    "Name"        text,
    "Type"        text,
    "Value"       text,
    constraint "PK_UserHasWidgetParams"
        primary key ("UserModelId", "Id")
);

alter table "UserHasWidgetParams"
    owner to postgres;

create index "IX_UserHasWidgetParams_WidgetId"
    on "UserHasWidgetParams" ("WidgetId");

create table "UsersToWidgets"
(
    "UserId"   integer not null
        constraint "FK_UsersToWidgets_Users_UserId"
            references "Users"
            on delete cascade,
    "WidgetId" integer not null
        constraint "FK_UsersToWidgets_Widgets_WidgetId"
            references "Widgets"
            on delete cascade,
    constraint "PK_UsersToWidgets"
        primary key ("UserId", "WidgetId")
);

alter table "UsersToWidgets"
    owner to postgres;

create index "IX_UsersToWidgets_WidgetId"
    on "UsersToWidgets" ("WidgetId");

create table "WidgetHasParams"
(
    "WidgetModelId" integer not null
        constraint "FK_WidgetHasParams_Widgets_WidgetModelId"
            references "Widgets"
            on delete cascade,
    "Id"            integer generated by default as identity,
    "Name"          text,
    "Type"          text,
    "Value"         text,
    "Required"      boolean,
    constraint "PK_WidgetHasParams"
        primary key ("WidgetModelId", "Id")
);

alter table "WidgetHasParams"
    owner to postgres;
